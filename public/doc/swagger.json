{
  "swagger": "2.0",
  "info": {
    "description": "The CASTEL API",
    "title": "castel",
    "version": "v1"
  },
  "host": "castel.fixe:3000",
  "schemes": [
    "http"
  ],
  "basePath": "/",
  "paths": {
    "/": {
      "get": {
        "summary": "Home Page",
        "responses": {
          "200": {
            "description": "Success response"
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "Create user account",
        "description": "",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "Adresse email",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "mot de passe",
            "required": true,
            "type": "string"
          },
          {
            "name": "username",
            "in": "formData",
            "description": "username",
            "required": true,
            "type": "string"
          },
          {
            "name": "firstname",
            "in": "formData",
            "description": "Firstname",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastname",
            "in": "formData",
            "description": "Lastname",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A user object",
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          },
          "400": {
            "description": "Username et/ou password non rempli",
            "schema": {
              "$ref": "#/components/schemas/Badreturn"
            }
          },
          "404": {
            "description": "Username and password don't match",
            "schema": {
              "$ref": "#/components/schemas/Badreturn"
            }
          },
          "500": {
            "description": "Database error",
            "schema": {
              "$ref": "#/components/schemas/Badreturn"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Login to the system",
        "description": "",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "password",
            "in": "formData",
            "description": "mot de passe",
            "required": true,
            "type": "string"
          },
          {
            "name": "username",
            "in": "formData",
            "description": "username",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A user object",
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/components/schemas/Badreturn"
            }
          },
          "404": {
            "description": "Username and password does not match",
            "schema": {
              "$ref": "#/components/schemas/Badreturn"
            }
          },
          "500": {
            "description": "Database error",
            "schema": {
              "$ref": "#/components/schemas/Badreturn"
            }
          }
        }
      }
    },
    "/me": {
      "get": {
        "summary": "User information",
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          },
          "500": {
            "description": "No SESSION",
            "schema": {
              "$ref": "#/components/schemas/Badreturn"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "User list",
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/components/schemas/ArrayOfUsers"
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "User details",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "schema": {
              "$ref": "#/components/schemas/Badreturn"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/components/schemas/Badreturn"
            }
          }
        }
      }
    },
    "/users/{userId}/castels": {
      "get": {
        "summary": "User castels lit",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/components/schemas/ArrayOfCastels"
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "schema": {
              "$ref": "#/components/schemas/Badreturn"
            }
          },
          "500": {
            "description": "Database error",
            "schema": {
              "$ref": "#/components/schemas/Badreturn"
            }
          }
        }
      }
    },
    "/castels": {
      "get": {
        "summary": "Castels list",
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/components/schemas/ArrayOfCastels"
            }
          },
          "500": {
            "description": "Database error",
            "schema": {
              "$ref": "#/components/schemas/Badreturn"
            }
          }
        }
      }
    },
    "/castels/{castelId}": {
      "get": {
        "summary": "castel details",
        "parameters": [
          {
            "name": "castelId",
            "in": "path",
            "description": "ID of castel to return",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/components/schemas/Castel"
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "schema": {
              "$ref": "#/components/schemas/Badreturn"
            }
          },
          "404": {
            "description": "Castel not found",
            "schema": {
              "$ref": "#/components/schemas/Badreturn"
            }
          },
          "500": {
            "description": "Database error",
            "schema": {
              "$ref": "#/components/schemas/Badreturn"
            }
          }
        }
      }
    },
    "/castels/{castelId}/buildings": {
      "get": {
        "summary": "buildings list for a castel",
        "parameters": [
          {
            "name": "castelId",
            "in": "path",
            "description": "ID of castel to list",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/components/schemas/ArrayOfBuildings"
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "schema": {
              "$ref": "#/components/schemas/Badreturn"
            }
          },
          "500": {
            "description": "Database error",
            "schema": {
              "$ref": "#/components/schemas/Badreturn"
            }
          }
        }
      }
    },
    "/castels/{castelId}/unities": {
      "get": {
        "summary": "buildings list for a castel",
        "parameters": [
          {
            "name": "castelId",
            "in": "path",
            "description": "ID of castel to list",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "$ref": "#/components/schemas/ArrayOfUnities"
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "schema": {
              "$ref": "#/components/schemas/Badreturn"
            }
          },
          "500": {
            "description": "Database error",
            "schema": {
              "$ref": "#/components/schemas/Badreturn"
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Badreturn": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "Castel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The castel ID."
          },
          "label": {
            "type": "string",
            "description": "name of the castel."
          },
          "user_id": {
            "type": "integer",
            "description": "The user owner ID."
          },
          "points": {
            "type": "integer",
            "description": "castel developpement point."
          },
          "wood": {
            "type": "integer",
            "description": "The user name."
          },
          "gold": {
            "type": "integer",
            "description": "The user name."
          },
          "stone": {
            "type": "integer",
            "description": "The user name."
          },
          "pop": {
            "type": "integer",
            "description": "The user name."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The user name."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The user name."
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The user ID."
          },
          "username": {
            "type": "string",
            "description": "The user name."
          },
          "email": {
            "type": "string",
            "description": "The user email."
          },
          "firstname": {
            "type": "string",
            "description": "The user name."
          },
          "lastname": {
            "type": "string",
            "description": "The user name."
          },
          "birthday": {
            "type": "string",
            "format": "date-time",
            "description": "The user birthday."
          },
          "gender": {
            "type": "string",
            "description": "The user gender."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The user name."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The user name."
          }
        }
      },
      "Building": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The building ID."
          },
          "level": {
            "type": "integer",
            "description": "level of the building."
          },
          "label": {
            "type": "string",
            "description": "name of the building."
          },
          "wood_needed": {
            "type": "integer",
            "description": "wood needed."
          },
          "gold_needed": {
            "type": "integer",
            "description": "gold needed."
          },
          "stone_needed": {
            "type": "integer",
            "description": "stone needed."
          },
          "pop_needed": {
            "type": "integer",
            "description": "pop needed."
          }
        }
      },
      "Unity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The user ID."
          },
          "label": {
            "type": "string",
            "description": "The user name."
          },
          "strength": {
            "type": "integer",
            "description": "The user email."
          },
          "defense": {
            "type": "integer",
            "description": "The user name."
          },
          "pop": {
            "type": "integer",
            "description": "The user name."
          },
          "wood_needed": {
            "type": "integer",
            "description": "The user name."
          },
          "gold_needed": {
            "type": "integer",
            "description": "The user name."
          },
          "stone_needed": {
            "type": "integer",
            "description": "The user name."
          },
          "quantity": {
            "type": "integer",
            "description": "The user name."
          }
        }
      },
      "ArrayOfUsers": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/User"
        }
      },
      "ArrayOfCastels": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Castel"
        }
      },
      "ArrayOfBuildings": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Building"
        }
      },
      "ArrayOfUnities": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Unity"
        }
      }
    }
  }
}